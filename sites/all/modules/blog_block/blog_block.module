<?php // $id


/**
 * @file full Code.
 */



/**
 * Implementation of hook_perm().
 */
function blog_block_perm() {
	return array('administer Blogs Block', '');
}


/**
 * Implementation of hook_menu().
 */
function blog_block_menu() {

	$items['blog-block'] = array(
		'title'	=> 'Sidebar Preview',
		'page callback'			=> 'build_sidebar_blog',
		'access callback'		=> 'user_access',
		'access arguments' => array('administer Blog Block'),
	);
	return $items;
}
	
	
/**
	*	To  build array for Sidebar menu Items 
	*/

function build_sidebar_blog() {

	$SelectBlog=db_query("SELECT td.name, nd.nid FROM term_data td INNER JOIN node nd ON nd.nid = td.tid WHERE td.vid =8");
	while($ResultBlog=db_fetch_array($SelectBlog))
	{
	$BlogsArray[]=$ResultBlog;
	}
	$output = sidebar_html_blog($BlogsArray);
	return $output;
}


/**
	*	To  Generate Html for Sidebar menu.
*/

function sidebar_html_blog($menu_arr) {

drupal_add_js(drupal_get_path('module', 'blog_block') . '/blog_block.js');
$url=$_SERVER['REQUEST_URI'];
$url_test=explode("/",$url);
$test_url= $url_test[2];

$terms=array(5045,5044,5046,29375,28867);
$blog_nid = arg(1);
$blog_node = node_load($blog_nid);

if(arg(0)=='blogs_list'){$attributes = "class=active";}

if($blog_node->type=='blog' ){$attributes = "class=active";}

if (in_array(arg(2),$terms)){$attributes = "class=active";}	


	$output .= '	<div class="left_mag" style="">	<dl>';
		
	foreach($menu_arr as $datum) {
	 $Blogname=$datum['name'];
        $nid=$datum[nid];
      if($test_url=='blogs_list'){$nodepath="node/".$nid;}else{$nodepath='';}
	$output .= '	<dt><a href='.$nodepath.'> '.$Blogname;
						
	$output .= '  </a></dt>';
				
	
	$output .= '	<dd><ul>	';
	
	
   $result = db_query("SELECT nd.title, ctb.nid,tn.tid  FROM content_type_blog ctb INNER JOIN node nd ON ctb.nid = nd.nid INNER JOIN term_node tn ON tn.nid = nd.nid 
WHERE nd.type = 'blog' and tn.tid=".$nid);
    while ($item = db_fetch_object($result)) {
        $items= $item->title;
        $itemnid=$item->nid;
        $path="node/".$itemnid;
        $itemtid=$item->tid;

	  
if (arg(2)==$itemtid && arg(0)!='blogs_list') {$attributes = "class=active";}
else if($blog_node->type=='blog' && arg(1)==$itemnid ){$attributes = "class=active";}	
else{$attributes = "";}	

		$output .= '<li '.$attributes.'>' .l($items, $path) 	.'</li>';
		 }
		$output .= '</ul></dd>';
			
	
}
	$output .= '</dl></div>';
	return $output;
}



/**
* Generate HTML for the onthisdate block
* @param op the operation from the URL
* @param delta offset
* @returns block HTML
*/
function blog_block_block($op='list', $delta=0) {

  // set up the block 
  $block = array();

  if ($op == "list") {
    // Generate listing of blocks from this module, for the admin/block page

    $block[0]["info"] = t('Blogs Sidebar');
  }
  else if ($op == 'view') {

    // Generate our block content

    // content variable that will be returned for display
    $block_content = build_sidebar_blog();

    // Fill in the subject of our block which is the same whether or not
    // the block has any real content
    $block['subject'] = '';

    // check to see if there was any content before returning
    //  the block view
    if ($block_content == '') {  
       // no content from a week ago
       $block['content'] = 'Sorry No Content';
    }
    else {
      // set up the block
      $block['content'] = $block_content;
    }
  }
	
  /*$types = array('issue' => 1, 'blog' => 2);
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $nid = arg(1);
    $node = node_load(array('nid' => $nid));
    $type = $node->type;
    if (isset($types[$type])) {
    $match = TRUE;
  }

  if (arg(0) == 'node' && is_numeric(arg(1))) {
  if ($match) {
  return $block;
  }
  else{
  return FALSE;
  }
  }
  else{
  return $block;
  }
  }*/	
				return $block;
}




