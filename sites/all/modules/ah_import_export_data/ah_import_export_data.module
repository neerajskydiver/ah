<?php

function ah_import_export_data_perm()
{
	return array("Import Export data");
}

function ah_import_export_data_menu()
{

	$items = array();

	$items['admin/settings/ah_import_export_data'] = array(
	'title' => 'Import Export data',
	'description' => 'Import and then export data of article in xml',
	'page callback' => 'ah_import_export_data_form',
	'access arguments' => array('administer site configuration'),
	);


	$items['admin/settings/ah_import_export_data/help'] = array(
	'title' => 'Help',
	'description' => 'Import and then export data of article in xml',
	'page callback' => 'help_text_import_export',
	'access callback' => user_access,
	'access arguments' => array('administer site configuration'),
	'type' => MENU_LOCAL_TASK,
	'weight' => 0
	);
	
	$items['admin/settings/ah_import_export_data/Import'] = array(
	'title' => 'Import data',
	'page callback' => 'ah_import_export_data_article',
	'access callback' => user_access,
	'access arguments' => array('administer site configuration'),
	'weight' => 1,
	'type' => MENU_LOCAL_TASK,
	);
	
	$items['admin/settings/ah_import_export_data/Export'] = array(
	'title' => 'Export data',
	'page callback' => 'ah_import_export_data_export',
	'access callback' => user_access,
	'access arguments' => array('administer site configuration'),
	'weight' => 2,
	'type' => MENU_LOCAL_TASK,
	);
	
	return $items;
}

function help_text_import_export(){

	return "help_text_import_export";
	
}

function ah_import_export_data_article(){

	return drupal_get_form('ah_import_export_data_form');

}

function ah_import_export_data_export(){

	return drupal_get_form('ah_import_export_data_form_export');

}

function ah_import_export_data_form_export(){

	$form_export = array();
	
	//$html = getHtml();
	
	/*$form_export['list'] = array(
		
		'#type' => 'markup',
		
		'#value' => '<span>These are the list of imported files which has to be exported .</span><br/><br/>'//.$html
		
	);*/
		 
	$form_export['export'] = array(
	
		'#type' => "submit",
		
		'#value' => t('Export'),
		
	);	
    
	return $form_export;

}

function ah_import_export_data_form_export_submit(&$form,&$form_state){

	$function = 'ah_import_export_data_batch';
	$batch = $function();
	batch_set($batch);

}

function ah_import_export_data_batch(){
		
	$operations = array();
	
	//$query_css = db_query("SELECT * FROM export_status WHERE 1");
						
	$css_style = '<p class="';
						
	//$rowcnt = mysql_num_rows($query_css);
		
	//$var = $rowcnt + 5 ;
						
	$query_css = db_query("SELECT * FROM `node_revisions` WHERE `title` LIKE '%&%' ");
	
	while ($css_data = db_fetch_object($query_css)){
	
		$query_result = db_query("SELECT nid, title FROM node WHERE type = 'article' and status = '1' AND nid = {$css_data->nid}");

//echo "SELECT nid, title FROM node WHERE type = 'article' and status = '1' AND nid = {$css_data->nid} LIMIT {$rowcnt}, {$var}"; die;
			
		$data = db_fetch_object($query_result);

		$operations[] = array('logic_for_ah_import_export_data', array($data));	
	
	}
	
	$batch = array(
	
    	'operations' => $operations,
		
    	'finished' => 'ah_import_export_data_finished',
		
  	);
	
	return $batch;

}

function logic_for_ah_import_export_data($data, &$context){

	//$query_select_body = db_query("SELECT nr.body, cta.field_deck_value, u.name  FROM node_revisions AS nr INNER JOIN content_type_article AS cta ON cta.nid = nr.nid INNER JOIN  content_field_art_contributor AS cfac ON cfac.nid = cta.nid INNER JOIN  users AS u ON u.uid = cfac.field_art_contributor_uid WHERE nr.nid = ".$data->nid);
	
		
/*	$query_select_body = db_query('SELECT nr.body, cta.field_deck_value FROM node_revisions AS nr INNER JOIN content_type_article AS cta ON cta.nid = nr.nid WHERE nr.nid = '.$data->nid);*/


$query_select_body = db_query('SELECT nr.body, cta.field_deck_value,cta.field_issue_nid_nid,issue.field_year_value FROM node_revisions AS nr INNER JOIN content_type_article AS cta ON cta.nid = nr.nid inner join content_type_issue AS issue on issue.nid = cta.field_issue_nid_nid WHERE nr.nid = '.$data->nid);
	
		
	$result_body = db_fetch_object($query_select_body);
				
	if($result_body->body){
	
	$query_author = db_query('SELECT u.name FROM users AS u INNER JOIN content_field_art_contributor AS cfac ON cfac.field_art_contributor_uid = u.uid WHERE cfac.nid = '.$data->nid);
	
	$result_author = db_fetch_object($query_author);
	
	
	$query_issue = db_query("SELECT title FROM node  WHERE type = 'issue' and nid = ".$result_body->field_issue_nid_nid);
	
	$result_issue = db_fetch_object($query_issue);
	
    $output = '';
		
	$output.= '<?xml version="1.0" encoding="utf-8" ?>';
		
	$output.= '<AmericanHeritageSociety>';

   	$output.= '<node type="article" docID="'.$data->nid.'">';
		
	//$data->title = str_replace(" class=\"", "", strval($data->title));
				
	$data->title = strip_tags($data->title,'<p>');
	
	$data->title = str_replace("&", "&amp;", strval($data->title));
		
	$data->title = str_replace("&nbsp;", "", strval($data->title));
		
	$output.= '<Title>'.$data->title.'</Title>';
		
		// remove class="
		
	//$result_body->body = preg_replace('/<style>(.*)<\/style>/','',$result_body->body);
				
	$result_body->body = strip_tags($result_body->body,'<p>');
	
	$result_body->body = preg_replace('/\sclass=[\'|"][^\'"]+[\'|"]/', '', strval($result_body->body));
	
	//$result_body->body = preg_replace("/\sclass=[\"|'][^\"']+[\"|']/", '', strval($result_body->body));
	
	$result_body->body = str_replace(" class=''", "", strval($result_body->body));
		
	$result_body->body = str_replace("&", "&amp;", strval($result_body->body));
		
	$result_body->body = str_replace("&nbsp;", "", strval($result_body->body));
	
	$result_body->body = preg_replace('!^<p>(.*?)</p>$!i', '$1', strval($result_body->body));
				
	$output.= '<Body>'.$result_body->body.'</Body>';
		
	$result_body->field_deck_value = strip_tags($result_body->field_deck_value);
	
	$result_body->field_deck_value = str_replace("&", "&amp;", strval($result_body->field_deck_value));
	
	$result_body->field_deck_value = str_replace("&nbsp;", "", strval($result_body->field_deck_value));
		
	$output.= '<Deck>'.$result_body->field_deck_value.'</Deck>';
		
	$result_author->name = str_replace("&", "&amp;", strval($result_author->name));
	
	$result_author->name = str_replace("&nbsp;", "", strval($result_author->name));
		
	$output.= '<Contributor>'.$result_author->name.'</Contributor>';
		
	$output.= '<Issue>'.$result_issue->title.'</Issue>';
		
	$output.= '</node>';
	
	$output.= '</AmericanHeritageSociety>';
		
	// create the xml filepath
    $filename = file_directory_path() . '/test/' . $data->nid . '.xml';
		
	// open or create the file
    $file = fopen($filename, 'w');
		
	// save the file
    fwrite($file, $output);
		
	// close the file
    fclose($file);  		
		
		//$insert_export_status = db_query("INSERT INTO export_status VALUES(".$data->nid.", 1)");
		
	}
		
	$context['results'][] = $data->nid . ' : ' . check_plain($data->title);
		
	$context['message'] = t('Loading @title', array('@title' => $data->title));	
		
	//$context['results'][].= 'No content type issue for '.$cnt_err.' articles.<br/>';
		
	//$context['results'][].= 'File export successfull.<br/>';
		
	$path = file_directory_path() . '/test/';
	
	zipFolders($path);

}

function ah_import_export_data_finished($success, $results, $operations) {

  if ($success) {
    // Here we could do something meaningful with the results.
    // We just display the number of nodes we processed...
    $message = count($results) . ' processed.';
  	$nodes = $nodes . $results[0] . $results[1];
  	
  }
  else {
    // An error occurred.
    // $operations contains the operations that remained unprocessed.
    $error_operation = reset($operations);
    $message = 'An error occurred while processing ' . $error_operation[0] . ' with arguments :' . print_r($error_operation[0], TRUE);
  }
  
drupal_set_message($nodes);

}


function zipFolders($path){
	
	$exportfile_path = $path;
	
	//this folder must be writeable by the server
	$backup = file_directory_path() . '/back_up';
	
	$zip_file = $backup.'/test.zip';
	
	if ($handle = opendir($exportfile_path))
	{
		$zip = new ZipArchive();
	
		if ($zip->open($zip_file, ZIPARCHIVE::CREATE)!==TRUE) 
		{
			drupal_set_message("cannot open <$filename>\n");
		}	
	
		while (false !== ($file = readdir($handle))) 
		{	
		
			if($file != '..' && $file != '.')
			{
				$zip->addFile($exportfile_path.$file, $file);  
			}			      
		}
		
		closedir($handle);
		
		$zip->close();
		
	}else{
	
		drupal_set_message('Failed to open the folder.');
	
	}

}

function ah_import_export_data_form(){

	$form = array();	
	
	$form['#attributes'] = array(
	
		'enctype' => "multipart/form-data"
		
	);
	
	$form['upload'] = array(
	
		'#type' => 'file',
		
		'#title' => t('File'),
		
		'#description' => t('Select the csv file having export details.'),
		
	);	
	
	$form['inport'] = array(
	
		'#type' => "submit",
		
		'#value' => t('Import'),
		
	);
	
	return $form;

}

function ah_import_export_data_form_submit(&$form,&$form_state){

	$module_list[]= "filefield_paths";

	module_disable($module_list);
	
	$path = file_directory_path().'/'.uploaded_files;
	
	$validators = array( 'file_validate_extensions_csv' => array( 'csv' ) );     //   	validating the file to be uploaded	
	 
	if ($file = file_save_upload('upload',$validators,$path)) {
					
		$err = file_validate_extensions_aj($file,'csv');
		
		form_set_error('upload',$err[0]);
		
		$path_csv = $file->destination;
				
		if(!$err[0]){
		
			drupal_set_message(t('The Uploaded File has been saved successfully.'));
			
		}else{
		
			file_delete($path_csv);
			
		}
		
	}else {
	
       	file_delete($file->filepath);
		
       	drupal_set_message('Uploaded file does not appear to be a valid image file. Please try again.');
		
    } 
	
	if(!$err[0])
	{
		
		$var  = logic_for_data_import_csv($path_csv);

	}
	
}

function file_validate_extensions_csv($file, $extensions) {
 
  global $user;
  
  $errors = array();

  // Bypass validation for csv file.
    $regex = '/\.('. ereg_replace(' +', '|', preg_quote($extensions)) .')$/i';
	
    if (!preg_match($regex, $file->filename)) {
 
     $errors[] = t("Only file with .csv extension is allowed");

    }
  return $errors;
}


function logic_for_data_import_csv($path_csv){

	global $user;
	
	$handler = fopen($path_csv,"r");
	
	$cnt = 1;
	
	$skip_first_row = 0;

	// fetching the data from the csv file, array format
	while(($data = fgetcsv($handler,10000,",")) != FALSE){
		
		//print_r($data);
		
	if($skip_first_row == 0){
	
		$article_key = array_keys($data, "Article");
		$article_key = $article_key[0];
		
		$year_key = array_keys($data, "Year_of_Issue");
		$year_key = $year_key[0];
		
		$issue_key = array_keys($data, "Issue");
		$issue_key = $issue_key[0];
			
	}
	
		if($skip_first_row > 0){
					
			$article = $data[$article_key];
			
			$year = $data[$year_key];
			
			$issue   = $data[$issue_key];			
			
			$query_get_nid = "SELECT n.nid FROM node AS n INNER JOIN content_type_article AS ca ON n.nid = ca.nid INNER JOIN content_type_issue AS ci ON  ca.field_issue_nid_nid = ci.nid WHERE ci.field_year_value = ".$year." AND n.title LIKE '%".$article."%'";
			
			$result = db_query($query_get_nid);
			
			while($rows = mysql_fetch_row($result)){

				$node_id = $rows[0];				
			
			}
			
			$result_nid = db_query("SELECT nid FROM import_export_node WHERE nid = ".$node_id);
						
			$rw_cnt = mysql_num_rows($result_nid);
			
			if($rw_cnt < 1){
			
				$query_insert_export_data = "INSERT INTO import_export_node(article,issue,nid,xmlfile_export) VALUES('".$article."','".$issue."',".$node_id.",'')";
				
				db_query($query_insert_export_data);
				
			}// if $rw_cnt			
			
		}//if
		
		$skip_first_row++;	
			
	}// While

	drupal_set_message('The data has been inserted to TABLE import_export_node');
	//die;
}