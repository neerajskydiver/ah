<?php
// $Id$

/**
 * @file
 * Import Collection keywords as Taxonomy terms.
 */

 
/**
 * Implementation of hook_perm().
 */
function collection_taxonomy_perm() {
  return array('administer collection taxonomy');
}


/**
 * Implementation of hook_menu().
 */
function collection_taxonomy_menu() {
  $items['admin/settings/collection-taxonomy'] = array(
    'title' => 'Collection Taxonomy',
    'description' => 'Import Collection keywords as Taxonomy terms.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('collection_taxonomy_form'),
    'access arguments' => array('administer collection taxonomy'),
  );
  return $items;
}


function collection_taxonomy_form_submit($form, &$form_state)
{
  collection_batch_import_terms($form_state);
//    $num_nodes = $form_state['values']['num_nodes'];//591; //

    //return $nid;
}

/** 
 *
 *
 */
function import_collection_keywords(&$context = NULL)
{

    // to fetch latest nid updated
    $sql_latest = 'SELECT latest_nid FROM collection_taxonomy';
    $latest_nid_obj = db_fetch_object(db_query($sql_latest));
    $latest_nid =  $latest_nid_obj->latest_nid;

    // to fetch nid to process
      if ($latest_nid!=0 && $latest_nid!='' && $latest_nid!= NULL)
    {
     $sql = "SELECT nid FROM content_type_collection WHERE nid > %d AND field_keywords_value !='' ORDER BY nid ASC";
     $query = db_query($sql, $latest_nid);
     $nid_obj = db_fetch_object($query);
    }
    else
    {
      $sql = "SELECT nid FROM content_type_collection WHERE  field_keywords_value !='' ORDER BY nid ASC";
      $nid_obj = db_fetch_object(db_query($sql));
    }
    $nid =  $nid_obj->nid;
// END

    $node =  node_load($nid);

    $terms_str = $node->field_keywords[0]['value'];
/*
 *  $arrFrom = array(";","--",".");
 *  $arrTo = array(",",",",",");
 *  // $terms_string = trim(str_replace($arrFrom, $arrTo, $terms_str));
 */
	  $terms['tags'][12] = strip_tags($terms_str);
	  
	  if ($node->field_keywords[0]['value'])
	  {
  	  taxonomy_node_save($node, $terms); // IMPORTANT
	  }
//collection_taxonomy_nids
//START COPY CODE
      $sql_insert = 'INSERT INTO collection_taxonomy_nids(collection_nid) VALUES(%d)';
      db_query($sql_insert, $nid);


// Check If collection_taxonomy is empty
    $sql_count = 'SELECT COUNT(*) as count FROM collection_taxonomy';
    $latest_nid_obj = db_fetch_object(db_query($sql_count));
    $latest_count =  $latest_nid_obj->count;

   if ($latest_count == 0){
      $sql_insert = 'INSERT INTO collection_taxonomy(latest_nid) VALUES(%d)';
      db_query($sql_insert, $nid);
   }
   else
   {
     $sql_update = 'UPDATE collection_taxonomy SET latest_nid = %d';
     db_query($sql_update, $nid);
   }
//END COPY CODE
    drupal_set_message(l($nid, 'node/'.$nid));
    
      $context['results']['num_nids'] ++;
}

function collection_taxonomy(){
  drupal_get_form('collection_taxonomy_form');
}

/**
 * Implementation of hook_form().
 */

function collection_taxonomy_form(){
  $form['import']['num_nodes'] = array (
	'#title' => 'Number OF Collections',
	'#type' => 'textfield',
	);

	$form['submit'] = array('#type' => 'submit', '#value' => t('Import'));
	return $form;
}

/**
 * Functions called from FAPI:
 */

function collection_batch_import_terms($form_state){
  $operations = array();

  // Setup the batch operations and save the variables.
  for ($num = 0; $num < $form_state['values']['num_nodes']; $num ++) {
    $operations[] = array('import_collection_keywords', array());
  }
  // start the batch
  $batch = array(
    'title' => t('Import Content'),
    'operations' => $operations,
    'finished' => 'collection_import_batch_finished',
  );
  batch_set($batch);
}

/**
 *
 */
function collection_import_batch_finished($success, $results, $operations) {
  if ($success) {
    $message = t('Finished @num_nids nodes processed successfully.', array('@num_nids' => $results['num_nids']));
  }
  else {
    $message = t('Finished with an error.');
  }
  drupal_set_message($message);
}

